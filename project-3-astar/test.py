from eight_puzzle import *
from informedSearch import *

def test():
    manhattan = 0
    tiles = 1
    Goal_state_m = EightPuzzle([[1, 2, 3], [8, ' ', 4], [7, 6, 5]], (1, 1), manhattan)
    Goal_state_t = EightPuzzle([[1, 2, 3], [8, ' ', 4], [7, 6, 5]], (1, 1), tiles)

    A = [[[' ', 1, 3], [8, 2, 4], [7, 6, 5]], (0, 0), "A"]
    B = [[[1, 3, 4], [8, 6, 2], [" ", 7, 5]], (2, 0), "B"]
    C = [[[1, 3, " "], [4, 2, 5], [8, 7, 6]], (0, 2), "C"]
    D = [[[7, 1, 2], [8, " ", 3], [6, 5, 4]], (1, 1), "D"]
    E = [[[8, 1, 2], [7, " ", 4], [6, 5, 3]], (1, 1), "E"]
    F = [[[2, 6, 3], [4, " ", 5], [1, 8, 7]], (1, 1), "F"]
    G = [[[7, 3, 4], [6, 1, 5], [8, " ", 2]], (2, 1), "G"]
    H = [[[7, 4, 5], [6, " ", 3], [8, 1, 2]], (1, 1), "H"]
    I = [[[1, 3, 4], [8, 6, 2], [7, " ", 5]], (2, 1), "I"]
    J = [[[5, 6, 7], [4, " ", 8], [3, 2, 1]], (1, 1), "J"]

    rows =  []

    for puz in [A, B, C, D, E, F, G, H, I]:
            Puz_m = EightPuzzle(puz[0], puz[1])
            Puz_t = EightPuzzle(puz[0], puz[1], tiles)
            rows.append("%s           |          %d            |          %d" %(puz[2], InformedSearch(Puz_t, Goal_state_t, True).expanded_nodes_num,
                                                       InformedSearch(Puz_m, Goal_state_m, True).expanded_nodes_num))
    print()
    print()
    print()
    print("-----------------------------------------------------------------------------------------------------------")
    print()

    print("Puzzle              A*(tiles)              A*(distance)")
    for i in rows:
        print(i)


if __name__ == "__main__":
    test()
    # print("A")
    # InformedSearch(EightPuzzle([[' ', 1, 3], [8, 2, 4], [7, 6, 5]], (0, 0), "h"),
    #                EightPuzzle([[1, 2, 3], [8, ' ', 4], [7, 6, 5]], (1, 1), "h"), True)  # A
    # print(
    #     "------------------------------------------------------------------------------------------------------------")
    # print("B")
    # InformedSearch(EightPuzzle([[1, 3, 4], [8, 6, 2], [" ", 7, 5]], (2, 0)),
    #                EightPuzzle([[1, 2, 3], [8, ' ', 4], [7, 6, 5]], (1, 1)), True)  # B
    # print(
    #     "------------------------------------------------------------------------------------------------------------")
    # print("C")
    # InformedSearch(EightPuzzle([[1, 3, " "], [4, 2, 5], [8, 7, 6]], (0, 2)),
    #                EightPuzzle([[1, 2, 3], [8, ' ', 4], [7, 6, 5]], (1, 1)), True)  # C
    # print(
    #     "------------------------------------------------------------------------------------------------------------")
    # print("D")
    # InformedSearch(EightPuzzle([[7, 1, 2], [8, " ", 3], [6, 5, 4]], (1, 1)),
    #                EightPuzzle([[1, 2, 3], [8, ' ', 4], [7, 6, 5]], (1, 1)), True)  # D
    # print(
    #     "------------------------------------------------------------------------------------------------------------")
    # print("E")
    # InformedSearch(EightPuzzle([[8, 1, 2], [7, " ", 4], [6, 5, 3]], (1, 1)),
    #                EightPuzzle([[1, 2, 3], [8, ' ', 4], [7, 6, 5]], (1, 1)), True)  # E
    #
    # print(
    #     "------------------------------------------------------------------------------------------------------------")
    # print("F")
    # InformedSearch(EightPuzzle([[2, 6, 3], [4, " ", 5], [1, 8, 7]], (1, 1)),
    #                EightPuzzle([[1, 2, 3], [8, ' ', 4], [7, 6, 5]], (1, 1)), True)  # F
    #
    # print(
    #     "------------------------------------------------------------------------------------------------------------")
    # print("G")
    # InformedSearch(EightPuzzle([[7, 3, 4], [6, 1, 5], [8, " ", 2]], (2, 1)),
    #                EightPuzzle([[1, 2, 3], [8, ' ', 4], [7, 6, 5]], (1, 1)), True)  # G
    #
    # print(
    #     "------------------------------------------------------------------------------------------------------------")
    # print("H")
    # InformedSearch(EightPuzzle([[7, 4, 5], [6, " ", 3], [8, 1, 2]], (1, 1)),
    #                EightPuzzle([[1, 2, 3], [8, ' ', 4], [7, 6, 5]], (1, 1)), True)  # H
